{"version":3,"sources":["firebase.js","Components/layout/Login.js","Components/layout/Signout.js","Components/layout/Nav.js","Components/layout/Header.js","Components/layout/Footer.js","Components/project/TravelEntry.js","Components/project/TravelPost.js","Components/project/TravelMap.js","Components/project/TravelDiary.js","Components/authenication/SignIn.js","Components/authenication/SignUp.js","App.js","serviceWorker.js","Data/reducers/redux.js","Data/reducers/projectRedux.js","Data/reducers/rootRedux.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","settings","timestampsInSnapshots","Login","className","to","Signout","Nav","Header","id","src","Footer","href","aria-hidden","TravelEntry","this","props","handleChange","handleClick","attrOne","countryInput","date","inputError","action","htmlFor","type","name","onChange","value","onPlaceSelected","place","autoFunction","types","onClick","Component","TravelPost","deleteEntry","uniqueId","key","class","TravelMap","Map","center","zoom","preferCanvas","scrollWheelZoom","TileLayer","attribution","url","React","TravelDiary","country","address_components","long_name","console","log","setState","markerPosition","lat","geometry","location","lng","event","target","inputCheck","state","length","preventDefault","user","dbRef","ref","push","markerLat","markerLng","deleteMemory","memoryId","Swal","fire","title","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","child","remove","database","personalMemory","on","response","newState","data","val","dt","map","entry","SignIn","email","password","uid","submitHandle","login","document","querySelector","auth","signInWithEmailAndPassword","u","catch","err","onSubmit","updateState","SignUp","lastName","App","a","exact","path","component","render","updateUser","Boolean","window","hostname","match","initState","redux","projectRedux","rootRedux","combineReducers","authenication","project","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"0VAeEA,IAASC,cAVc,CACrBC,OAAQ,0CACRC,WAAY,wCACZC,YAAa,+CACbC,UAAW,wBACXC,cAAe,oCACfC,kBAAmB,eACnBC,MAAO,8CAITR,IAASS,YAAYC,SAAS,CAAEC,uBAAuB,IACxCX,QAAf,ECJaY,EAVD,WACV,OACI,wBAAIC,UAAU,SACV,4BAAI,kBAAC,IAAD,CAASC,GAAI,YAAb,iBACJ,4BAAI,kBAAC,IAAD,CAASA,GAAI,KAAb,YACJ,4BAAI,kBAAC,IAAD,CAASA,GAAI,WAAWD,UAAU,2BAAlC,SCIDE,EATC,WACZ,OACI,wBAAIF,UAAU,SACV,4BAAI,kBAAC,IAAD,CAASC,GAAI,WAAb,WACJ,4BAAI,kBAAC,IAAD,CAASA,GAAI,WAAb,YCcDE,EAdH,WACR,OACI,6BACI,yBAAKH,UAAU,cACX,yBAAKA,UAAU,oBACX,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,WAAvB,mBACA,kBAAC,EAAD,MACA,kBAAC,EAAD,UCALI,EAXA,WACX,OACI,yBAAKC,GAAG,YACJ,yBAAKL,UAAU,SACf,yBAAKA,UAAU,cAAcM,IAAI,kCACjC,yBAAKN,UAAU,eAAf,wCCeGO,EArBA,WACX,OACI,6BACI,4BAAQP,UAAU,cACd,iEACA,yBAAKA,UAAU,gBACX,4BACI,uBAAGQ,KAAK,mCAAkC,uBAAGR,UAAU,gBAAgBS,cAAY,WAEvF,4BACI,uBAAGD,KAAK,mCAAkC,uBAAGR,UAAU,eAAeS,cAAY,WAEtF,4BACI,uBAAGD,KAAK,0CAAyC,uBAAGR,UAAU,kBAAkBS,cAAY,e,0CC0CrGC,E,uKArDD,IAAD,SASPC,KAAKC,MAPRC,EAFU,EAEVA,aACSC,EAHC,EAGDA,YAEAC,GALC,EAIDC,aAJC,EAKDD,SACTE,EANU,EAMVA,KACAC,EAPU,EAOVA,WAGK,OACI,6BACR,0BAAMlB,UAAU,cAAcmB,OAAO,UACpC,6CAEA,2BAAOC,QAAQ,OAAOpB,UAAU,QAAhC,oBAGA,2BAAOqB,KAAK,OAAOC,KAAK,OAAOC,SAAUV,EAAcW,MAAOP,IAC/C,2BAAOG,QAAQ,gBAAf,qBACf,kBAAC,IAAD,CACC/B,OAAO,0CACPoC,gBAAkB,SAACC,GAClB,EAAKd,MAAMe,aAAaD,IAEzBE,MAAO,CAAC,eASM,kDACf,2BAAOR,QAAQ,WAAU,uBAAGpB,UAAU,sBAAsBS,cAAY,UAExE,2BACCY,KAAK,OACLC,KAAK,UACaC,SAAUV,EACVW,MAAOT,IAG1B,uBAAGf,UAAU,gBAAgBkB,GAE7B,4BAAQlB,UAAU,iBAAiB6B,QAASf,GAA5C,kB,GA/CqBgB,aCoBXC,EArBI,SAAC,GAMb,IALNd,EAKK,EALLA,KACAD,EAIK,EAJLA,aACAD,EAGK,EAHLA,QACAiB,EAEK,EAFLA,YACAC,EACK,EADLA,SAEA,OACC,wBAAIjC,UAAU,YAAYkC,IAAKD,GAC9B,4BAAQJ,QAASG,GAAa,uBAAGG,MAAM,cAAc1B,cAAY,UAGjE,yBAAKT,UAAU,WACd,4BAAKgB,GACL,2BAAIC,GACJ,6BAAMF,M,gBCiCKqB,G,wDA5Cb,WAAYxB,GAAQ,uCACZA,G,qDAaN,OAEE,kBAACyB,EAAA,EAAD,CAAKC,OAXW,CAAC,SAAU,SAYrBC,KAAM,EACNC,cAAc,EACdC,iBAAiB,GAErB,kBAACC,EAAA,EAAD,CACEC,YAAY,oFACVC,IAAI,4D,GAxBQC,IAAMf,YCiKbgB,E,kDA9Jb,WAAYlC,GAAQ,IAAD,8BACrB,cAAMA,IA6BJa,gBAAkB,SAAEC,GAGtB,IACMqB,EADgBrB,EAAMsB,mBACC,GAAGC,UAChCC,QAAQC,IAAIJ,GACZG,QAAQC,IAAI,EAAKvC,OAGjB,EAAKwC,SAAS,CACbpC,aAAc+B,EACdM,eAAgB,CACfC,IAAK5B,EAAM6B,SAASC,SAASF,MAC7BG,IAAK/B,EAAM6B,SAASC,SAASC,UA3CV,EA+CnB5C,aAAe,SAAA6C,GACjB,EAAKN,SAAL,eACEM,EAAMC,OAAOrC,KAAOoC,EAAMC,OAAOnC,SAjDd,EAsDtBoC,WAAa,WACZ,IAAI1C,EAAa,GAWjB,OAR4B,IAA3B,EAAK2C,MAAM5C,KAAK6C,QACmB,IAAnC,EAAKD,MAAM7C,aAAa8C,QACM,IAA9B,EAAKD,MAAM9C,QAAQ+C,SAGnB5C,EAAa,mCAGVA,IACH,EAAKkC,SAAS,CAAElC,gBACT,IApEa,EA0EtBJ,YAAc,SAAA4C,GACbA,EAAMK,iBACU,EAAKH,eAEpB,EAAKR,SAAS,CACbnC,KAAM,GACND,aAAc,GACdD,QAAS,GACTG,WAAY,GACZmC,eAAgB,CACfC,IAAK,GACLG,IAAK,MAKJP,QAAQC,IAAI,EAAKU,MAAMG,MAE1B,EAAKH,MAAMI,MAAMC,IAAI,sCAAsCC,KAAK,CAC/DlD,KAAM,EAAK4C,MAAM5C,KACjBD,aAAc,EAAK6C,MAAM7C,aACzBD,QAAS,EAAK8C,MAAM9C,QACpBqD,UAAW,EAAKP,MAAMR,eAAeC,IACrCe,UAAW,EAAKR,MAAMR,eAAeI,QAjGlB,EAuGtBa,aAAe,SAAAC,GACdC,IAAKC,KAAK,CACTC,MAAO,+CACPrD,KAAM,UACNsD,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,UACnBC,kBAAmB,oBACjBC,MAAK,SAAAC,GACHA,EAAOxD,OACV,EAAKqC,MAAMI,MAAMC,MAAMe,MAAMV,GAAUW,aA/GzC,EAAKrB,MAAQ,CACZI,MAAO9E,EAASgG,WAChBC,eAAgB,GAChBnE,KAAM,GACND,aAAc,GACdD,QAAS,GACTG,WAAY,GACZmC,eAAgB,CACfC,IAAK,GACLG,IAAK,KAXc,E,gEAeE,IAAD,OACtB9C,KAAKkD,MAAMI,MAAMC,MAAMmB,GAAG,SAAS,SAAAC,GAClC,IAAMC,EAAW,GACXC,EAAOF,EAASG,MACtB,IAAK,IAAIvD,KAAOsD,EACfD,EAASpB,KAAK,CACbuB,GAAIF,EAAKtD,GACT7B,GAAI6B,IAGN,EAAKkB,SAAS,CACbgC,eAAgBG,S,+BA2FN,IAAD,OACP,OACE,8BACI,6BAASvF,UAAU,iBAC5B,6BACC,kBAAC,EAAD,CACCa,aAAcF,KAAKE,aACnBC,YAAaH,KAAKG,YAClBG,KAAMN,KAAKkD,MAAM5C,KACjBD,aAAcL,KAAKkD,MAAM7C,aACzBD,QAASJ,KAAKkD,MAAM9C,QACLG,WAAYP,KAAKkD,MAAM3C,WACvBS,aAAchB,KAAKc,mBAG3B,yBAAKzB,UAAU,cACX,kBAAC,EAAD,CACAoF,eAAgBzE,KAAKkD,MAAMuB,mBAI/B,6BACT,wBAAIpF,UAAU,iBACZW,KAAKkD,MAAMuB,eAAeO,KAAI,SAAAC,GAC9B,OACC,kBAAC,EAAD,CACC1D,IAAK0D,EAAMvF,GACXY,KAAM2E,EAAMF,GAAGzE,KACfD,aAAc4E,EAAMF,GAAG1E,aACvBD,QAAS6E,EAAMF,GAAG3E,QAClBiB,YAAa,kBAAM,EAAKsC,aAAasB,EAAMvF,iB,GApJxByB,aC2EX+D,E,4MA1EPhC,MAAQ,CACJiC,MAAO,GACPC,SAAU,GACVC,IAAI,I,EAKZnF,aAAe,SAAC6C,GACZ,EAAKN,SAAL,eACKM,EAAMC,OAAOtD,GAAKqD,EAAMC,OAAOnC,S,EAGxCyE,aAAe,SAACvC,GACZA,EAAMK,iBACNb,QAAQC,IAAI,EAAKU,Q,EAErBqC,MAAQ,WACJ,IAAMJ,EAAQK,SAASC,cAAc,UAAU5E,MACzCuE,EAAWI,SAASC,cAAc,aAAa5E,MACrDrC,EAASkH,OAAOC,2BAA2BR,EAAOC,GAC/ChB,MAAK,SAACwB,GAEL,EAAKnD,SAAS,CACVY,KAAMuC,EAAEvC,KAAKgC,MAGjB9C,QAAQC,IAAIoD,EAAEvC,KAAKgC,KACnB7G,EAASgG,WAAWjB,IAAI,SAAWqC,EAAEvC,KAAKgC,KAAKX,GAAG,SAAS,SAAAC,GACzDpC,QAAQC,IAAImC,GACZ,IAAMC,EAAW,GACXC,EAAOF,EAASG,MAEtB,IAAK,IAAIvD,KADTgB,QAAQC,IAAIqC,GACIA,EACdD,EAASpB,KAAK,CACZhB,IAAKqC,EAAKtD,GACV7B,GAAI6B,IAGRgB,QAAQC,IAAIoC,MAOdrC,QAAQC,IAAI,6BAEbqD,OAAM,SAACC,GACNvD,QAAQC,IAAIsD,O,uDAKhB,OACI,yBAAKzG,UAAU,iBACX,0BAAM0G,SAAU/F,KAAKsF,aAAcjG,UAAU,UACzC,uCACA,2BAAOoB,QAAQ,SAAf,SACA,2BAAOC,KAAK,QAAQhB,GAAG,QAAQkB,SAAUZ,KAAKE,eAE9C,2BAAOO,QAAQ,YAAf,YACA,2BAAOC,KAAK,WAAWhB,GAAG,WAAWkB,SAAUZ,KAAKE,eACpD,kBAAC,IAAD,CAAMZ,GAAG,YAAY,4BAAQD,UAAU,YAAY6B,QAASlB,KAAKC,MAAM+F,YAAYhG,KAAKkD,MAAMmC,MAAzE,UAEpB9C,QAAQC,IAAIxC,KAAKkD,a,GApEjB/B,aCqCN8E,E,4MAvCX/C,MAAQ,CACJiC,MAAO,GACPC,SAAU,GACVzE,KAAM,GACNuF,SAAU,I,EAEdhG,aAAe,SAAC6C,GACZ,EAAKN,SAAL,eACKM,EAAMC,OAAOtD,GAAKqD,EAAMC,OAAOnC,S,EAGxCyE,aAAe,SAACvC,GACZA,EAAMK,iBACNb,QAAQC,IAAI,EAAKU,Q,uDAGjB,OACI,yBAAK7D,UAAU,iBACX,0BAAM0G,SAAU/F,KAAKsF,aAAcjG,UAAU,UACzC,wCACA,2BAAOoB,QAAQ,SAAf,SACA,2BAAOC,KAAK,QAAQhB,GAAG,QAAQkB,SAAUZ,KAAKE,eAE9C,2BAAOO,QAAQ,YAAf,YACA,2BAAOC,KAAK,WAAWhB,GAAG,WAAWkB,SAAUZ,KAAKE,eAEpD,2BAAOO,QAAQ,QAAf,QACA,2BAAOC,KAAK,OAAOhB,GAAG,OAAOkB,SAAUZ,KAAKE,eAE5C,2BAAOO,QAAQ,YAAf,aACA,2BAAOC,KAAK,OAAOhB,GAAG,WAAWkB,SAAUZ,KAAKE,eAChD,4BAAQb,UAAU,aAAlB,kB,GAhCC8B,aCmGNgF,E,kDAtFb,aAAe,IAAD,8BACZ,gBAeFZ,MAAQ,WACN,IAGIlC,EAHE8B,EAAQK,SAASC,cAAc,UAAU5E,MACzCuE,EAAWI,SAASC,cAAc,aAAa5E,MAGrDrC,EAASkH,OAAOC,2BAA2BR,EAAOC,GAC/ChB,MAAK,SAACwB,GAELrD,QAAQC,IAAIoD,EAAEvC,KAAKgC,KA0BpBhC,EAAOuC,EACP,EAAKI,YAAY3C,MAEjBwC,OAAM,SAACC,GACNvD,QAAQC,IAAIsD,OAtDJ,EA4DdE,YAAc,SAACI,GACZ7D,QAAQC,IAAI,OAAQ4D,GACrB,EAAK3D,SAAS,CACZY,KAAM+C,IACN,WAAM7D,QAAQC,IAAI,mBACpBD,QAAQC,IAAI4D,IA/DZ,EAAKlD,MAAQ,CACXG,KAAM,GACNoB,eAAgB,MAJN,E,qDAoEJ,IAAD,OACT,OACE,kBAAC,IAAD,KACE,yBAAKpF,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOgH,OAAK,EAACC,KAAK,IAAIC,UAAW9G,IACjC,kBAAC,IAAD,CAAO6G,KAAK,WAAWE,OAAQ,SAACvG,GAAD,OAAW,kBAAC,EAAD,iBAAiBA,EAAjB,CAAwBoD,KAAM,EAAKA,KAAMoB,eAAgB,EAAKA,qBACxG,kBAAC,IAAD,CAAO6B,KAAK,UAAUE,OAAQ,SAACvG,GAAD,OAAW,kBAAC,EAAD,iBAAYA,EAAZ,CAAmBsF,MAAO,EAAKA,MAAOS,YAAa,EAAKA,kBACjG,kBAAC,IAAD,CAAOM,KAAK,UAAUE,OAAQ,SAACvG,GAAD,OAAW,kBAAC,EAAD,iBAAYA,EAAZ,CAAmBwG,WAAY,EAAKA,kBAE/E,kBAAC,EAAD,Y,GAhFUtF,aCFEuF,QACW,cAA7BC,OAAO9D,SAAS+D,UAEe,UAA7BD,OAAO9D,SAAS+D,UAEhBD,OAAO9D,SAAS+D,SAASC,MACvB,2D,YClBAC,EAAY,GAMHC,EAJD,WAAgC,IAA/B7D,EAA8B,uDAAtB4D,EACnB,OAAO5D,GCHL4D,EAAY,GAMHE,EAJM,WAAgC,IAA/B9D,EAA8B,uDAAtB4D,EAC1B,OAAO5D,GCMI+D,EALGC,YAAgB,CAC9BC,cAAeJ,EACfK,QAASJ,I,gBCKPK,EAAQC,YAAYL,EAAWM,YAAgBC,MAErDC,IAASjB,OACP,kBAAC,IAAMkB,WAAP,KACE,kBAAC,IAAD,CAAUL,MAAOA,GAAO,kBAAC,EAAD,QAE1B7B,SAASmC,eAAe,SJkHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB1D,MAAK,SAAA2D,GACJA,EAAaC,gBAEdnC,OAAM,SAAAoC,GACL1F,QAAQ0F,MAAMA,EAAMC,c","file":"static/js/main.208c83db.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport 'firebase/database';  \n  // Your web app's Firebase configuration\n  const firebaseConfig = {\n    apiKey: \"AIzaSyDWQJYVT5hp_-c-5lsT9C347Hlju5ihl1c\",\n    authDomain: \"travel-memories-bdc4e.firebaseapp.com\",\n    databaseURL: \"https://travel-memories-bdc4e.firebaseio.com\",\n    projectId: \"travel-memories-bdc4e\",\n    storageBucket: \"travel-memories-bdc4e.appspot.com\",\n    messagingSenderId: \"292457573659\",\n    appId: \"1:292457573659:web:f0339f888072fef36b77be\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  firebase.firestore().settings({ timestampsInSnapshots: true});\n  export default firebase;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Login = () => {\n    return(\n        <ul className=\"right\">\n            <li><NavLink to ='/journal'>Travel Entry</NavLink></li>\n            <li><NavLink to ='/'>Log Out</NavLink></li>\n            <li><NavLink to ='/journal' className=\"btn btn-floating purple\">JD</NavLink></li>\n        </ul>\n    )\n}\n\nexport default Login;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Signout = () => {\n    return(\n        <ul className=\"right\">\n            <li><NavLink to ='/signup'>Signup</NavLink></li>\n            <li><NavLink to ='/signin'>LogIn</NavLink></li>\n        </ul>\n    )\n}\n\nexport default Signout;","// functional Component b/c there is no state\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport Login from './Login'\nimport Signout from './Signout'\n\nconst Nav = () => {\n    return(\n        <div>\n            <nav className=\"navWrapper\">\n                <div className=\"contentContainer\">\n                    <Link to='/' className=\"navLogo\">Travel Memories</Link>\n                    <Login />\n                    <Signout />\n                </div>\n            </nav>\n        </div>    \n    )\n}\n\nexport default Nav;","import React from 'react';\n// import mountfuji from './Assets/mountfuji.png'\n\nconst Header = () => {\n    return(\n        <div id=\"homePage\">\n            <div className=\"photo\">\n            <img className=\"headerPhoto\" src=\"https://picsum.photos/640/360\"></img>\n            <div className=\"titleHeader\">Memories: A Personal Travel Diary</div>\n            </div>\n        </div>\n    )\n}\n\nexport default Header;","import React, { Component } from 'react'\n\nconst Footer = () => {\n    return(\n        <div>\n            <footer className=\"mainFooter\">\n                <p>Develop and Design by @thatjenster</p>\n                <div className=\"footerSocial\">\n                    <li>\n                        <a href=\"https://twitter.com/thatjenster\"><i className=\"fa fa-twitter\" aria-hidden=\"true\"></i></a>\n                    </li>\n                    <li>\n                        <a href=\"https://github.com/that-jenster\"><i className=\"fa fa-github\" aria-hidden=\"true\"></i></a>\n                    </li>\n                    <li>\n                        <a href=\"https://www.instagram.com/jennyt.dinh/\"><i className=\"fa fa-instagram\" aria-hidden=\"true\"></i></a>\n                    </li>\n                </div>\n            </footer>\n        </div>\n    )\n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport Autocomplete from 'react-google-autocomplete';\n\nclass TravelEntry extends Component {\n    render() {\n        const {\n\t\t\thandleChange,\n            handleClick,\n            countryInput,\n            attrOne,\n\t\t\tdate,\n\t\t\tinputError,\n\n\t\t} = this.props;\n        return(\n            <div>\n\t\t\t\t<form className=\"travelEntry\" action='submit'>\n\t\t\t\t\t<h2>Your Memories</h2>\n\n\t\t\t\t\t<label htmlFor='date' className='date'>\n\t\t\t\t\t\tWhen did you go?\n\t\t\t\t\t</label>\n\t\t\t\t\t<input type='date' name='date' onChange={handleChange} value={date} />\n                    <label htmlFor='countryInput'>Where did you go?</label>\n\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\tapiKey='AIzaSyA0q4l001f40aI0cHAqqWcebpVOPJNr_XE'\n\t\t\t\t\t\tonPlaceSelected={ (place) => {\n\t\t\t\t\t\t\tthis.props.autoFunction(place);\n\t\t\t\t\t\t  }}\n\t\t\t\t\t\ttypes={['(regions)']}\n\t\t\t\t\t/>\n                    {/* <input\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tname='countryInput'\n                        onChange={handleChange}\n                        value={countryInput}\n\t\t\t\t\t/> */}\n\t\t\t\t\t\n                    <h2>Favorite Moments: </h2>\n\t\t\t\t\t<label htmlFor='attrOne'><i className=\"fa fa-paper-plane-o\" aria-hidden=\"true\"></i>\n\t\t\t\t\t</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tname='attrOne'\n                        onChange={handleChange}\n                        value={attrOne}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<p className='errorMessage'>{inputError}</p>\n\n\t\t\t\t\t<button className=\"button formBtn\" onClick={handleClick}>Post Me!</button>\n\t\t\t\t</form>\n            </div>\n        )\n    }\n}\n\nexport default TravelEntry;","import React from 'react';\n\nconst TravelPost = ({\n\tdate,\n\tcountryInput,\n\tattrOne,\n\tdeleteEntry,\n\tuniqueId\n}) => {\n\treturn (\n\t\t<li className='eachEntry' key={uniqueId}>\n\t\t\t<button onClick={deleteEntry}><i class=\"fa fa-trash\" aria-hidden=\"true\"></i>\n\t\t\t</button>\n\n\t\t\t<div className='content'>\n\t\t\t\t<h3>{countryInput}</h3>\n\t\t\t\t<p>{date}</p>\n\t\t\t\t<div>{attrOne}</div>\n\t\t\t</div>\n\t\t</li>\n\t);\n};\n\nexport default TravelPost;","import React from 'react'\nimport 'font-awesome/css/font-awesome.min.css';\nimport { Map, Marker, Popup, TileLayer } from 'react-leaflet'\nimport L from 'leaflet';\n\nclass TravelMap extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n     const position = [43.6532, -79.3832];\n    //  const iconPerson = new L.Icon({\n    //     iconUrl: require('./../assets/star.jpg'),\n    //     iconRetinaUrl: require('./../assets/star.jpg'),\n    //     iconSize: new L.Point(40, 60),\n    //     className: 'leaflet-div-icon'\n    // });\n\n\n    return (\n        \n      <Map center={position} \n            zoom={2} \n            preferCanvas={false}\n            scrollWheelZoom={false}>\n                \n        <TileLayer\n          attribution='&copy; <a href=\"http://openstreeetmap.org/copyright\">OpenStreetMap</a> contributors'\n            url='https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n        />\n\n         {/* {this.props.personalMemory.map((popper) => {\n             console.log(popper);\n             console.log(this.props.personalMemory);\n             let pos = [popper.dt.markerLat, popper.dt.markerLng]\n            return(\n            <Marker position={pos} key={popper.id} >\n                <Popup>\n                  I was here. <br/> and it was AWESOME.\n                </Popup>\n            </Marker>\n            )\n         })} */}\n      </Map>\n    );\n  }\n}\n\n\nexport default TravelMap;","import React, { Component } from 'react';\nimport Swal from 'sweetalert2';\nimport TravelEntry from './TravelEntry';\nimport TravelPost from './TravelPost';\nimport TravelMap from './TravelMap';\nimport firebase from './../../firebase.js';\n\nclass TravelDiary extends Component {\n    constructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdbRef: firebase.database(),\n\t\t\tpersonalMemory: [],\n\t\t\tdate: '',\n\t\t\tcountryInput: '',\n\t\t\tattrOne: '',\n\t\t\tinputError: '',\n\t\t\tmarkerPosition: {\n\t\t\t\tlat: '',\n\t\t\t\tlng: ''\n\t\t\t}\n\t\t};\n    }\n    componentDidMount() {\n\t\tthis.state.dbRef.ref().on('value', response => {\n\t\t\tconst newState = [];\n\t\t\tconst data = response.val();\n\t\t\tfor (let key in data) {\n\t\t\t\tnewState.push({\n\t\t\t\t\tdt: data[key],\n\t\t\t\t\tid: key\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.setState({\n\t\t\t\tpersonalMemory: newState\n\t\t\t});\n\t\t});\n    }\n    onPlaceSelected = ( place ) => {\n\t\t// console.log( 'plc', place );\n\t\t// console.log( 'plc2', place.geometry.location.lat());\n\t\tconst addressArray =  place.address_components;\n\t\tconst country = addressArray[0].long_name;\n\t\tconsole.log(country);\n\t\tconsole.log(this.props);\n\n\t\t// Set these values in the state.\n\t\tthis.setState({\n\t\t\tcountryInput: country,\n\t\t\tmarkerPosition: {\n\t\t\t\tlat: place.geometry.location.lat(),\n\t\t\t\tlng: place.geometry.location.lng()\n\t\t\t}\n\t\t})\n\t};\n    handleChange = event => {\n\t\tthis.setState({\n\t\t\t[event.target.name]: event.target.value\n\t\t});\n\t};\n\n\t// VALIDATION CHECK: make sure user fill out all required field\n\tinputCheck = () => {\n\t\tlet inputError = '';\n\n\t\tif (\n\t\t\tthis.state.date.length === 0 ||\n\t\t\tthis.state.countryInput.length === 0 ||\n\t\t\tthis.state.attrOne.length === 0 \n\n\t\t) {\n\t\t\tinputError = 'Hello! Please fill it all out.';\n\t\t}\n\n\t\tif (inputError) {\n\t\t\tthis.setState({ inputError });\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t};\n\n\t// event - > handle click event\n\thandleClick = event => {\n\t\tevent.preventDefault();\n\t\tconst isValid = this.inputCheck();\n\t\tif (isValid) {\n\t\t\tthis.setState({\n\t\t\t\tdate: '',\n\t\t\t\tcountryInput: '',\n\t\t\t\tattrOne: '',\n\t\t\t\tinputError: '',\n\t\t\t\tmarkerPosition: {\n\t\t\t\t\tlat: '',\n\t\t\t\t\tlng: ''\n\t\t\t\t}\n\t\t\t});\n\n\t// push to firebase\n\t\t\t\t  console.log(this.state.user);\n\n\t\t\tthis.state.dbRef.ref('users/X0pccnAIW6QnWSGGb7k6ZzH1m2j2').push({\n\t\t\t\tdate: this.state.date,\n\t\t\t\tcountryInput: this.state.countryInput,\n\t\t\t\tattrOne: this.state.attrOne,\n\t\t\t\tmarkerLat: this.state.markerPosition.lat,\n\t\t\t\tmarkerLng: this.state.markerPosition.lng\n\t\t\t});\n\t\t}\n\t};\n\n\t// delete personalMemory that user inputted \n\tdeleteMemory = memoryId => {\n\t\tSwal.fire({\n\t\t\ttitle: 'Are you sure you want to delete this Memory?',\n\t\t\ttype: 'warning',\n\t\t\tshowCancelButton: true,\n\t\t\tconfirmButtonColor: '#846075',\n\t\t\tcancelButtonColor: '#1A1423',\n\t\t\tconfirmButtonText: 'Yes, delete it!'\n\t\t}).then(result => {\n\t\t\tif (result.value) {\n\t\t\t\tthis.state.dbRef.ref().child(memoryId).remove();\n\t\t\t}\n\t\t});\n\t};\n    render() {\n      return (\n        <main>\n            <section className='personalBoard'>\n\t\t\t<div>\n\t\t\t\t<TravelEntry\n\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\thandleClick={this.handleClick}\n\t\t\t\t\tdate={this.state.date}\n\t\t\t\t\tcountryInput={this.state.countryInput}\n\t\t\t\t\tattrOne={this.state.attrOne}\n                    inputError={this.state.inputError}\n                    autoFunction={this.onPlaceSelected}\n\t\t\t\t/>\n\t\t\t</div>\n            <div className=\"mapSection\">\n                <TravelMap \n                personalMemory={this.state.personalMemory}\n                />\n\t\t    </div>\n            </section>\n            <div>\n\t\t\t<ul className=\"personalDiary\">\n\t\t\t\t{this.state.personalMemory.map(entry => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<TravelPost\n\t\t\t\t\t\t\tkey={entry.id}\n\t\t\t\t\t\t\tdate={entry.dt.date}\n\t\t\t\t\t\t\tcountryInput={entry.dt.countryInput}\n\t\t\t\t\t\t\tattrOne={entry.dt.attrOne}\n\t\t\t\t\t\t\tdeleteEntry={() => this.deleteMemory(entry.id)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</div>\n        </main>\n      )\n    }\n  }\n  \n  export default TravelDiary;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport firebase from './../../firebase.js';\nimport 'firebase/auth';\n\nclass SignIn extends Component {\n    // constructor(props) {\n    //     super(props);\n        state = {\n            email: '',\n            password: '',\n            uid:'',\n        }\n        \n    // }\n    \n    handleChange = (event) => {\n        this.setState({\n            [event.target.id]: event.target.value\n        })\n    }\n    submitHandle = (event) => {\n        event.preventDefault();\n        console.log(this.state);\n    }\n    login = ()=> {\n        const email = document.querySelector('#email').value;\n        const password = document.querySelector('#password').value;\n        firebase.auth().signInWithEmailAndPassword(email, password)\n          .then((u) => {\n\n            this.setState({\n                user: u.user.uid,\n            })\n\n            console.log(u.user.uid);\n            firebase.database().ref('users/' + u.user.uid).on('value', response => {\n              console.log(response);\n              const newState = [];\n              const data = response.val();\n              console.log(data);\n              for (let key in data) {\n                newState.push({\n                  log: data[key],\n                  id: key\n                });\n              }\n              console.log(newState);\n            //   this.setState({\n            //     personalMemory: newState\n            //   });\n        \n            });\n            // this.props.updateState(u.user.uid);\n            console.log('Successfully Logged In');\n          })\n          .catch((err) => {\n            console.log(err);\n          })\n      }\n      \n    render() {\n        return(\n            <div className=\"formContainer\">\n                <form onSubmit={this.submitHandle} className=\"signin\">\n                    <h4>Sign In</h4>\n                    <labal htmlFor=\"email\">Email</labal>\n                    <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n\n                    <labal htmlFor=\"password\">Password</labal>\n                    <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n                    <Link to='/journal' ><button className=\"signinBtn\" onClick={this.props.updateState(this.state.uid)}>LogIn</button></Link>\n\n                    {console.log(this.state)}\n                    \n                </form>\n\n            </div>\n        )\n    }\n}\n\nexport default SignIn;","import React, { Component } from 'react';\n\nclass SignUp extends Component {\n    state = {\n        email: '',\n        password: '',\n        name: '',\n        lastName: '',\n    }\n    handleChange = (event) => {\n        this.setState({\n            [event.target.id]: event.target.value\n        })\n    }\n    submitHandle = (event) => {\n        event.preventDefault();\n        console.log(this.state);\n    }\n    render() {\n        return(\n            <div className=\"formContainer\">\n                <form onSubmit={this.submitHandle} className=\"signin\">\n                    <h4>Register</h4>\n                    <labal htmlFor=\"email\">Email</labal>\n                    <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n\n                    <labal htmlFor=\"password\">Password</labal>\n                    <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n\n                    <labal htmlFor=\"name\">Name</labal>\n                    <input type=\"text\" id=\"name\" onChange={this.handleChange}/>\n\n                    <labal htmlFor=\"lastName\">Last Name</labal>\n                    <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\n                    <button className=\"signinBtn\">Register</button>\n                </form>\n\n            </div>\n        )\n    }\n}\n\nexport default SignUp;","import React, { Component } from 'react';\nimport 'font-awesome/css/font-awesome.min.css';\nimport './Styles/App.css';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport firebase from './firebase.js';\nimport 'firebase/auth';\nimport Nav from './Components/layout/Nav';\nimport Header from './Components/layout/Header';\nimport Footer from './Components/layout/Footer';\nimport TravelDiary from './Components/project/TravelDiary';\nimport SignIn from './Components/authenication/SignIn';\nimport SignUp from './Components/authenication/SignUp';\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      user: '',\n      personalMemory: 'pm',\n    }\n  }\n\n  // updateUser = (newUser, newMemory) => {\n  //   this.setState = {\n  //     user: newUser,\n  //     personalMemory: newMemory,\n  //   }\n  // }\n\n\n  login = () => {\n    const email = document.querySelector('#email').value;\n    const password = document.querySelector('#password').value;\n\n    let user, newData;\n    firebase.auth().signInWithEmailAndPassword(email, password)\n      .then((u) => {\n\n        console.log(u.user.uid);\n        // console.log('test');\n        \n        // firebase.database().ref('users/' + u.user.uid).on('value', response => {\n        //   console.log(response);\n    \n        //   const data = response.val();\n        //   console.log(data);\n        //   for (let key in data) {\n        //     newData.push({\n        //       log: data[key],\n        //       id: key\n        //     });\n        //   }\n\n        //   console.log(newData);\n        //   user = u;\n\n\n        // });\n        // console.log('Successfully Logged In');\n\n        // // this.updateState(user, newData);\n\n        // console.log(user.user.uid)\n\n       user = u;\n       this.updateState(user);\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n\n      \n  }\n\n  updateState = (a) => {\n     console.log('user', a);\n    this.setState({\n      user: a,\n    },()=> {console.log('stateupdated')})\n    console.log(a);\n  }\n    \n  render() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Nav />\n        <Switch>\n          <Route exact path='/' component={Header} />\n          <Route path='/journal' render={(props) => <TravelDiary {...props} user={this.user} personalMemory={this.personalMemory} /> } />\n          <Route path='/signin' render={(props) => <SignIn {...props} login={this.login} updateState={this.updateState}/> } />\n          <Route path=\"/signup\" render={(props) => <SignUp {...props} updateUser={this.updateUser} /> } />\n        </Switch>\n        <Footer />\n      </div>\n    </BrowserRouter>\n  );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {}\n\nconst redux = (state = initState, action) => {\n    return state\n}\n\nexport default redux;","const initState = {}\n\nconst projectRedux = (state = initState, action) => {\n    return state\n}\n\nexport default projectRedux;","import redux from './redux';\nimport projectRedux from './projectRedux';\nimport { combineReducers } from 'redux';\n\nconst rootRedux = combineReducers({\n    authenication: redux,\n    project: projectRedux\n});\n\nexport default rootRedux;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware } from 'redux';\nimport rootRedux from './Data/reducers/rootRedux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\n\nconst store = createStore(rootRedux, applyMiddleware(thunk));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}><App /></Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}