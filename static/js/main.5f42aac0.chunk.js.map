{"version":3,"sources":["Assets/markerpin.png","Components/layout/Login.js","firebase.js","Components/layout/Signout.js","Components/layout/Nav.js","Components/layout/Header.js","Components/layout/Footer.js","Components/project/TravelEntry.js","Components/project/TravelPost.js","Components/project/TravelMap.js","Components/project/TravelDiary.js","Components/authenication/SignIn.js","Components/authenication/SignUp.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Signout","props","class","onClick","this","showSignUp","showLogin","React","Component","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Login","loggedOut","auth","signOut","then","Swal","fire","title","displayName","text","type","confirmButtonText","confirmButtonColor","window","location","reload","catch","error","message","initials","match","shift","pop","toUpperCase","className","Nav","user","Header","id","src","Footer","href","aria-hidden","TravelEntry","handleChange","handleClick","attrOne","date","inputError","action","htmlFor","name","onChange","value","process","onPlaceSelected","place","autoFunction","types","TravelPost","countryInput","deleteEntry","uniqueId","key","TravelMap","iconPerson","L","Icon","iconUrl","require","iconRetinaUrl","iconSize","Point","Map","center","zoom","preferCanvas","scrollWheelZoom","TileLayer","attribution","url","personalMemory","map","popper","pos","log","markerLat","markerLng","Marker","position","icon","Popup","TravelDiary","country","address_components","long_name","setState","markerPosition","lat","geometry","lng","event","target","inputCheck","state","length","preventDefault","dbRef","ref","push","deleteMemory","memoryId","showCancelButton","cancelButtonColor","result","child","remove","database","on","response","newState","data","val","entry","SignIn","email","password","submitHandle","login","document","querySelector","signInWithEmailAndPassword","u","updateState","uid","updateDiary","updateDisplayName","err","onSubmit","SignUp","lastName","signUp","firstName","createUserWithEmailAndPassword","updateProfile","App","a","showDiary","showHeader","showItem","Boolean","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"4GAAAA,EAAOC,QAAU,IAA0B,uC,oNCmB5BC,G,wDAhBX,WAAYC,GAAQ,uCACZA,G,qDAIR,OACI,yBAAKC,MAAM,oBACP,yBAAKA,MAAM,UACP,4BAAQC,QAASC,KAAKH,MAAMI,YAA5B,WACA,4BAAQF,QAASC,KAAKH,MAAMK,WAA5B,e,GAVMC,IAAMC,Y,6BCa1BC,IAASC,cAVc,CACrBC,OAAQ,0CACRC,WAAY,wCACZC,YAAa,+CACbC,UAAW,wBACXC,cAAe,oCACfC,kBAAmB,eACnBC,MAAO,8CAIMR,QAAf,E,iBCyBaS,E,4MAnCXC,UAAY,WAASV,EAASW,OAAOC,UAAUC,MAAM,WACnDC,IAAKC,KAAK,CACRC,MAAM,GAAD,OAAK,EAAKxB,MAAMyB,YAAhB,iCACLC,KAAM,kBACNC,KAAM,UACNC,kBAAmB,SACnBC,mBAAoB,YACnBR,MAAK,WACNS,OAAOC,SAASC,QAAO,SAEtBC,OAAM,SAASC,GAChBZ,IAAKC,KAAK,CACRC,MAAO,mBACPE,KAAMQ,EAAMC,QACZR,KAAM,QACNE,mBAAoB,gB,uDAMxB,IACIO,EADOjC,KAAKH,MAAMyB,YACFY,MAAM,UAAY,GAExC,OADED,IAAaA,EAASE,SAAW,KAAOF,EAASG,OAAS,KAAKC,cAE/D,yBAAKC,UAAU,oBACb,yBAAKxC,MAAM,UACT,4BAAQC,QAASC,KAAKe,WAAtB,WACA,0BAAMuB,UAAU,gCAAiCL,S,GA7BvC7B,aCiBLmC,E,kDAjBX,WAAY1C,GAAQ,uCACZA,G,qDAGR,OACI,6BACI,yBAAKyC,UAAU,cACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,WAAd,mBACCtC,KAAKH,MAAM2C,KAAO,kBAAC,EAAD,CAASlB,YAAatB,KAAKH,MAAMyB,cAAiB,kBAAC,EAAD,CAAOpB,UAAWF,KAAKH,MAAMK,UAAWD,WAAYD,KAAKH,MAAMI,oB,GAVtIE,IAAMC,WCSTqC,EAXA,WACX,OACI,yBAAKC,GAAG,WAAWJ,UAAU,WACzB,yBAAKA,UAAU,SACf,yBAAKA,UAAU,cAAcK,IAAI,kCACjC,yBAAKL,UAAU,eAAf,wCCgBGM,EArBA,WACX,OACI,yBAAKN,UAAU,WACX,4BAAQA,UAAU,cACd,0EAA+C,+CAC/C,yBAAKA,UAAU,gBACX,4BACI,uBAAGO,KAAK,mCAAkC,uBAAGP,UAAU,gBAAgBQ,cAAY,WAEvF,4BACI,uBAAGD,KAAK,mCAAkC,uBAAGP,UAAU,eAAeQ,cAAY,WAEtF,4BACI,uBAAGD,KAAK,0CAAyC,uBAAGP,UAAU,kBAAkBQ,cAAY,e,yBCkCrGC,E,uKA7CD,IAAD,SAOP/C,KAAKH,MALRmD,EAFU,EAEVA,aACSC,EAHC,EAGDA,YACAC,EAJC,EAIDA,QACTC,EALU,EAKVA,KACAC,EANU,EAMVA,WAGK,OAEI,6BAER,0BAAMC,OAAO,UACZ,6CACA,2BAAOC,QAAQ,OAAOhB,UAAU,QAAhC,oBAGA,2BAAOd,KAAK,OAAO+B,KAAK,OAAOC,SAAUR,EAAcS,MAAON,IAC/C,2BAAOG,QAAQ,gBAAf,qBAEf,kBAAC,IAAD,CACC/C,OAASmD,0CACTC,gBAAkB,SAACC,GAClB,EAAK/D,MAAMgE,aAAaD,IAEzBE,MAAO,CAAC,eAEM,kDACf,2BAAOR,QAAQ,WAAU,uBAAGhB,UAAU,sBAAsBQ,cAAY,UAExE,2BACCtB,KAAK,OACL+B,KAAK,UACaC,SAAUR,EACVS,MAAOP,IAE1B,uBAAGZ,UAAU,gBAAgBc,GAC7B,4BAAQd,UAAU,iBAAiBvC,QAASkD,GAA5C,kB,GAvCqB7C,aCmBX2D,EApBI,SAAC,GAMb,IALNZ,EAKK,EALLA,KACAa,EAIK,EAJLA,aACAd,EAGK,EAHLA,QACAe,EAEK,EAFLA,YACAC,EACK,EADLA,SAEA,OACC,wBAAI5B,UAAU,YAAY6B,IAAKD,GAC9B,4BAAQnE,QAASkE,GAAa,uBAAGnE,MAAM,cAAcgD,cAAY,UAEjE,yBAAKR,UAAU,WACd,4BAAK0B,GACL,2BAAIb,GACJ,6BAAMD,M,iDC4BKkB,E,kDAtCb,WAAYvE,GAAQ,uCACZA,G,qDAIL,IACMwE,EAAa,IAAIC,IAAEC,KAAK,CAC3BC,QAASC,EAAQ,IACjBC,cAAeD,EAAQ,IACvBE,SAAU,IAAIL,IAAEM,MAAM,MAAO,IAC7BtC,UAAW,qBAGf,OACE,kBAACuC,EAAA,EAAD,CAAKC,OATW,CAAC,MAAO,OAUlBC,KAAM,EACNC,cAAc,EACdC,iBAAiB,GAErB,kBAACC,EAAA,EAAD,CACEC,YAAY,oFACVC,IAAI,uDAENpF,KAAKH,MAAMwF,eAAeC,KAAI,SAACC,GAC7B,IAAIC,EAAM,CAACD,EAAOE,IAAIC,UAAWH,EAAOE,IAAIE,WAC5C,OACA,kBAACC,EAAA,EAAD,CAAQC,SAAUL,EAAKrB,IAAKoB,EAAO7C,GAAIoD,KAAMzB,GACzC,kBAAC0B,EAAA,EAAD,oBACc,6BADd,iC,GA5BQ5F,IAAMC,WC+Jb4F,E,kDA5Jb,WAAYnG,GAAQ,IAAD,8BACrB,cAAMA,IA+BJ8D,gBAAkB,SAAEC,GACtB,IACMqC,EADgBrC,EAAMsC,mBACC,GAAGC,UAGhC,EAAKC,SAAS,CACbpC,aAAciC,EACdI,eAAgB,CACfC,IAAK1C,EAAM2C,SAAS3E,SAAS0E,MAC7BE,IAAK5C,EAAM2C,SAAS3E,SAAS4E,UAzCV,EA8CnBxD,aAAe,SAAAyD,GACjB,EAAKL,SAAL,eACEK,EAAMC,OAAOnD,KAAOkD,EAAMC,OAAOjD,SAhDd,EAqDtBkD,WAAa,WACZ,IAAIvD,EAAa,GAQjB,OAN4B,IAA3B,EAAKwD,MAAMzD,KAAK0D,QACmB,IAAnC,EAAKD,MAAM5C,aAAa6C,QACM,IAA9B,EAAKD,MAAM1D,QAAQ2D,SAEnBzD,EAAa,mCAEVA,IACH,EAAKgD,SAAS,CAAEhD,gBACT,IAhEa,EAsEtBH,YAAc,SAAAwD,GACbA,EAAMK,iBACU,EAAKH,eAEpB,EAAKP,SAAS,CACbjD,KAAM,GACNa,aAAc,GACdd,QAAS,GACTE,WAAY,GACZiD,eAAgB,CACfC,IAAK,GACLE,IAAK,MAKR,EAAKI,MAAMG,MAAMC,IAAI,SAAW,EAAKnH,MAAM2C,MAAMyE,KAAK,CACrD9D,KAAM,EAAKyD,MAAMzD,KACjBa,aAAc,EAAK4C,MAAM5C,aACzBd,QAAS,EAAK0D,MAAM1D,QACpBwC,UAAW,EAAKkB,MAAMP,eAAeC,IACrCX,UAAW,EAAKiB,MAAMP,eAAeG,QA3FjB,EAiGtBU,aAAe,SAAAC,GACdhG,IAAKC,KAAK,CACTC,MAAO,+CACPG,KAAM,UACN4F,kBAAkB,EAClB1F,mBAAoB,UACpB2F,kBAAmB,UACnB5F,kBAAmB,oBACjBP,MAAK,SAAAoG,GACHA,EAAO7D,OACV,EAAKmD,MAAMG,MAAMC,IAAI,SAAW,EAAKnH,MAAM2C,MAAM+E,MAAMJ,GAAUK,aAzGnE,EAAKZ,MAAQ,CACZG,MAAO1G,EAASoH,WAChBpC,eAAgB,GAChBlC,KAAM,GACNa,aAAc,GACdd,QAAS,GACTE,WAAY,GACZiD,eAAgB,CACfC,IAAK,GACLE,IAAK,KAXc,E,gEAgBE,IAAD,OACtBxG,KAAK4G,MAAMG,MAAMC,IAAI,SAAWhH,KAAKH,MAAM2C,MAAMkF,GAAG,SAAS,SAAAC,GAC5D,IAAMC,EAAW,GACXC,EAAOF,EAASG,MACtB,IAAK,IAAI3D,KAAO0D,EACfD,EAASX,KAAK,CACbxB,IAAKoC,EAAK1D,GACVzB,GAAIyB,IAGN,EAAKiC,SAAS,CACbf,eAAgBuC,S,+BAoFN,IAAD,OACP,OACE,0BAAMtF,UAAU,WACZ,6BAASA,UAAU,iBAC3B,yBAAKA,UAAU,eAEd,kBAAC,EAAD,CACCU,aAAchD,KAAKgD,aACnBC,YAAajD,KAAKiD,YAClBE,KAAMnD,KAAK4G,MAAMzD,KACjBa,aAAchE,KAAK4G,MAAM5C,aACzBd,QAASlD,KAAK4G,MAAM1D,QACpBE,WAAYpD,KAAK4G,MAAMxD,WACvBS,aAAc7D,KAAK2D,gBACnBnB,KAAMxC,KAAKH,MAAM2C,SAIpB,6BACC,wBAAIF,UAAU,iBAEZtC,KAAK4G,MAAMvB,eAAeC,KAAI,SAAAyC,GAC9B,OACC,kBAAC,EAAD,CACC5D,IAAK4D,EAAMrF,GAAGF,KACdW,KAAM4E,EAAMtC,IAAItC,KAChBa,aAAc+D,EAAMtC,IAAIzB,aACxBd,QAAS6E,EAAMtC,IAAIvC,QACnBe,YAAa,kBAAM,EAAKiD,aAAaa,EAAMrF,YAMhD,yBAAKJ,UAAU,gBAEb,kBAAC,EAAD,CACA+C,eAAgBrF,KAAK4G,MAAMvB,uB,GArJNjF,aCkDX4H,E,4MAnDXpB,MAAQ,CACJqB,MAAO,GACPC,SAAU,I,EAEdlF,aAAe,SAACyD,GACZ,EAAKL,SAAL,eACKK,EAAMC,OAAOhE,GAAK+D,EAAMC,OAAOjD,S,EAGxC0E,aAAe,SAAC1B,GACZA,EAAMK,kB,EAEVsB,MAAQ,WACJ,IAAMH,EAAQI,SAASC,cAAc,UAAU7E,MACzCyE,EAAWG,SAASC,cAAc,aAAa7E,MACrDpD,EAASW,OAAOuH,2BAA2BN,EAAOC,GAC/ChH,MAAK,SAACsH,GACT,EAAK3I,MAAM4I,YAAYD,EAAEhG,KAAKkG,KAC9B,EAAK7I,MAAM8I,cACX,EAAK9I,MAAM+I,kBAAkBJ,EAAEhG,KAAKlB,gBAGnCQ,OAAM,SAAC+G,GACJ1H,IAAKC,KAAK,CACNC,MAAO,mBACPE,KAAMsH,EAAI7G,QACVR,KAAM,QACNE,mBAAoB,UACpB2F,kBAAmB,gB,uDAM3B,OACI,yBAAK/E,UAAU,iBACX,0BAAMwG,SAAU9I,KAAKmI,aAAc7F,UAAU,UACzC,uCACA,2BAAOgB,QAAQ,SAAf,SACA,2BAAO9B,KAAK,QAAQkB,GAAG,QAAQc,SAAUxD,KAAKgD,eAE9C,2BAAOM,QAAQ,YAAf,YACA,2BAAO9B,KAAK,WAAWkB,GAAG,WAAWc,SAAUxD,KAAKgD,eACpD,4BAAQV,UAAU,YAAYvC,QAASC,KAAKoI,OAA5C,e,GA5CChI,aCuEN2I,E,4MAtEXnC,MAAQ,CACJqB,MAAO,GACPC,SAAU,GACV3E,KAAM,GACNyF,SAAU,I,EAEdhG,aAAe,SAACyD,GACZ,EAAKL,SAAL,eACKK,EAAMC,OAAOhE,GAAK+D,EAAMC,OAAOjD,S,EAGxC0E,aAAe,SAAC1B,GACZA,EAAMK,kB,EAEVmC,OAAS,WACL,IAAMhB,EAAQI,SAASC,cAAc,YAAY7E,MAC3CyE,EAAWG,SAASC,cAAc,eAAe7E,MACjDyF,EAAYb,SAASC,cAAc,SAAS7E,MAC5CuF,EAAWX,SAASC,cAAc,aAAa7E,MAErDpD,EAASW,OAAOmI,+BAA+BlB,EAAOC,GACnDhH,MAAK,SAACsH,GACLA,EAAEhG,KAAK4G,cAAc,CACjB9H,YAAY,GAAD,OAAK4H,EAAL,YAAkBF,KAC9B9H,MAAK,WACJ,EAAKrB,MAAM+I,kBAAkBJ,EAAEhG,KAAKlB,gBAExCH,IAAKC,KAAK,CACNC,MAAO,+BACPG,KAAM,UACND,KAAM,uBACNG,mBAAoB,eAGvBI,OAAM,SAAC+G,GACR1H,IAAKC,KAAK,CACNC,MAAO,yBACPG,KAAM,QACND,KAAMsH,EAAI7G,QACVN,mBAAoB,UACpB2F,kBAAmB,gB,uDAM3B,OACI,yBAAK/E,UAAU,iBACX,0BAAMwG,SAAU9I,KAAKmI,aAAc7F,UAAU,UACzC,wCACA,2BAAOgB,QAAQ,SAAf,SACA,2BAAO9B,KAAK,QAAQkB,GAAG,UAAUc,SAAUxD,KAAKgD,eAEhD,2BAAOM,QAAQ,YAAf,YACA,2BAAO9B,KAAK,WAAWkB,GAAG,aAAac,SAAUxD,KAAKgD,eAEtD,2BAAOM,QAAQ,QAAf,QACA,2BAAO9B,KAAK,OAAOkB,GAAG,OAAOc,SAAUxD,KAAKgD,eAE5C,2BAAOM,QAAQ,YAAf,aACA,2BAAO9B,KAAK,OAAOkB,GAAG,WAAWc,SAAUxD,KAAKgD,eAEhD,4BAAQV,UAAU,YAAYvC,QAASC,KAAKiJ,QAA5C,kB,GA/DC7I,aCsFNiJ,E,kDA9Eb,aAAe,IAAD,8BACZ,gBAWFZ,YAAc,SAACa,GACb,EAAKlD,SAAS,CACZ5D,KAAM8G,KAdI,EAkBdC,UAAY,WACV,EAAKnD,SAAS,CACZmD,WAAW,EACXrJ,WAAW,EACXD,YAAY,EACZuJ,YAAY,KAvBF,EA2BdtJ,UAAY,WACV,EAAKkG,SAAS,CACZlG,WAAW,EACXqJ,WAAW,EACXtJ,YAAY,EACZuJ,YAAY,KAhCF,EAoCdvJ,WAAa,WACX,EAAKmG,SAAS,CACZmD,WAAW,EACXrJ,WAAW,EACXD,YAAY,EACZuJ,YAAY,KAzCF,EA6CdZ,kBAAoB,SAACrF,GACnB,EAAK6C,SAAU,CACb9E,YAAaiC,KA7Cf,EAAKqD,MAAQ,CACXpE,KAAM,KACNtC,WAAW,EACXD,YAAY,EACZuJ,YAAY,EACZD,WAAW,EACXjI,YAAa,IARH,E,qDAoDZ,IAAImI,EAaN,OAVIA,EADCzJ,KAAK4G,MAAM3G,aAAeD,KAAK4G,MAAM4C,WAC1B,kBAAC,EAAD,CAAQf,YAAazI,KAAKyI,YAAaG,kBAAmB5I,KAAK4I,oBAClE5I,KAAK4G,MAAM1G,YAAcF,KAAK4G,MAAM4C,WAClC,kBAAC,EAAD,CAAQf,YAAazI,KAAKyI,YAAaE,YAAa3I,KAAKuJ,UAAWX,kBAAmB5I,KAAK4I,oBAC9F5I,KAAK4G,MAAM2C,UACT,kBAAC,EAAD,CAAc/G,KAAMxC,KAAK4G,MAAMpE,OAG/B,kBAAC,EAAD,MAIb,kBAAC,IAAD,KACE,yBAAKF,UAAU,OACb,kBAAC,EAAD,CAAKpC,UAAWF,KAAKE,UAAWD,WAAYD,KAAKC,WAAYuC,KAAMxC,KAAK4G,MAAMpE,KAAMlB,YAAatB,KAAK4G,MAAMtF,cAC5G,yBAAKgB,UAAU,wBACdmH,GAED,kBAAC,EAAD,Y,GAzEUrJ,aCAEsJ,QACW,cAA7B/H,OAAOC,SAAS+H,UAEe,UAA7BhI,OAAOC,SAAS+H,UAEhBhI,OAAOC,SAAS+H,SAASzH,MACvB,2DCZN0H,IAASC,OACP,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,OAEJzB,SAAS0B,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBhJ,MAAK,SAAAiJ,GACJA,EAAaC,gBAEdtI,OAAM,SAAAC,GACLsI,QAAQtI,MAAMA,EAAMC,c","file":"static/js/main.5f42aac0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/markerpin.ecdad0c2.png\";","import React from 'react';\n\nclass Signout extends React.Component {\n    constructor(props) {\n      super(props);\n    }\n\n    render(){\n    return(\n        <div class=\"contentContainer\">\n            <div class=\"navBtn\">\n                <button onClick={this.props.showSignUp}>Sign Up</button>\n                <button onClick={this.props.showLogin}>LogIn</button>\n            </div>\n        </div>\n    )\n    }\n}\n\nexport default Signout;","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport 'firebase/database';  \n  // Your web app's Firebase configuration\n  const firebaseConfig = {\n    apiKey: \"AIzaSyDWQJYVT5hp_-c-5lsT9C347Hlju5ihl1c\",\n    authDomain: \"travel-memories-bdc4e.firebaseapp.com\",\n    databaseURL: \"https://travel-memories-bdc4e.firebaseio.com\",\n    projectId: \"travel-memories-bdc4e\",\n    storageBucket: \"travel-memories-bdc4e.appspot.com\",\n    messagingSenderId: \"292457573659\",\n    appId: \"1:292457573659:web:f0339f888072fef36b77be\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  export default firebase;","import React, { Component } from 'react';\nimport firebase from '../../firebase.js';\nimport 'firebase/auth';\nimport Swal from 'sweetalert2';\n\nclass Login extends Component {\n    loggedOut = () => {  firebase.auth().signOut().then( () => {\n      Swal.fire({\n        title: `${this.props.displayName}, Thanks for writing a Memory`,\n        text: 'Come back soon!',\n        type: 'success',\n        confirmButtonText: 'LOGOUT',\n        confirmButtonColor: '#846075',\n      }).then(() => {\n        window.location.reload(true);\n      })\n      }).catch(function(error) {\n        Swal.fire({\n          title: 'Please Try Again',\n          text: error.message,\n          type: 'error',\n          confirmButtonColor: '#846075',\n      })\n    })\n        \n    }\n    render() {\n      let name = this.props.displayName;\n      let initials = name.match(/\\b\\w/g) || [];\n      initials = ((initials.shift() || '') + (initials.pop() || '')).toUpperCase();\n    return(\n      <div className=\"contentContainer\">\n        <div class=\"navBtn\">\n          <button onClick={this.loggedOut}>Log Out</button>\n          <span className=\"initalDisplay pink lighten-4\" >{initials}</span>\n        </div>\n      </div>\n    )\n    }\n}\n\nexport default Login;","import React from 'react';\nimport Login from './Login'\nimport Signout from './Signout'\n\nclass Nav extends React.Component {\n    constructor(props) {\n      super(props);\n    }\n    render(){\n    return(\n        <div>\n            <nav className=\"navWrapper\">\n                <div className=\"contentContainer\">\n                    <h4 className=\"navLogo\">Travel Memories</h4>\n                    {this.props.user ? <Signout displayName={this.props.displayName}/> : <Login showLogin={this.props.showLogin} showSignUp={this.props.showSignUp}/>}\n                </div>\n            </nav>\n        </div>    \n    )\n    }\n}\n\nexport default Nav;","import React from 'react';\n\nconst Header = () => {\n    return(\n        <div id=\"homePage\" className=\"wrapper\">\n            <div className=\"photo\">\n            <img className=\"headerPhoto\" src=\"https://picsum.photos/640/360\"></img>\n            <div className=\"titleHeader\">Memories: A Personal Travel Diary</div>\n            </div>\n        </div>\n    )\n}\n\nexport default Header;","import React, { Component } from 'react'\n\nconst Footer = () => {\n    return(\n        <div className=\"wrapper\">\n            <footer className=\"mainFooter\">\n                <p>Developed and Designed with love and coffee <span>@thatjenster</span></p>\n                <div className=\"footerSocial\">\n                    <li>\n                        <a href=\"https://twitter.com/thatjenster\"><i className=\"fa fa-twitter\" aria-hidden=\"true\"></i></a>\n                    </li>\n                    <li>\n                        <a href=\"https://github.com/that-jenster\"><i className=\"fa fa-github\" aria-hidden=\"true\"></i></a>\n                    </li>\n                    <li>\n                        <a href=\"https://www.instagram.com/jennyt.dinh/\"><i className=\"fa fa-instagram\" aria-hidden=\"true\"></i></a>\n                    </li>\n                </div>\n            </footer>\n        </div>\n    )\n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport Autocomplete from 'react-google-autocomplete';\n\nclass TravelEntry extends Component {\n    render() {\n        const {\n\t\t\thandleChange,\n            handleClick,\n            attrOne,\n\t\t\tdate,\n\t\t\tinputError,\n\t\t} = this.props;\n\n        return(\n\t\t\t\n            <div>\n\t\t\t\t{/* memory input form */}\n\t\t\t\t<form action='submit'>\n\t\t\t\t\t<h2>Your Memories</h2>\n\t\t\t\t\t<label htmlFor='date' className='date'>\n\t\t\t\t\t\tWhen did you go?\n\t\t\t\t\t</label>\n\t\t\t\t\t<input type='date' name='date' onChange={handleChange} value={date} />\n                    <label htmlFor='countryInput'>Where did you go?</label>\n\t\t\t\t\t{/* autocomplete from google to get location */}\n\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\tapiKey= {process.env.REACT_APP_GMAP_API_KEY}\n\t\t\t\t\t\tonPlaceSelected={ (place) => {\n\t\t\t\t\t\t\tthis.props.autoFunction(place);\n\t\t\t\t\t\t  }}\n\t\t\t\t\t\ttypes={['(regions)']}\n\t\t\t\t\t/>\n                    <h2>Favorite Moments: </h2>\n\t\t\t\t\t<label htmlFor='attrOne'><i className=\"fa fa-paper-plane-o\" aria-hidden=\"true\"></i>\n\t\t\t\t\t</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tname='attrOne'\n                        onChange={handleChange}\n                        value={attrOne}\n\t\t\t\t\t/>\n\t\t\t\t\t<p className='errorMessage'>{inputError}</p>\n\t\t\t\t\t<button className=\"button formBtn\" onClick={handleClick}>Post Me!</button>\n\t\t\t\t</form>\n            </div>\n        )\n    }\n}\n\nexport default TravelEntry;","import React from 'react';\n\nconst TravelPost = ({\n\tdate,\n\tcountryInput,\n\tattrOne,\n\tdeleteEntry,\n\tuniqueId\n}) => {\n\treturn (\n\t\t<li className='eachEntry' key={uniqueId}>\n\t\t\t<button onClick={deleteEntry}><i class=\"fa fa-trash\" aria-hidden=\"true\"></i>\n\t\t\t</button>\n\t\t\t<div className='content'>\n\t\t\t\t<h3>{countryInput}</h3>\n\t\t\t\t<p>{date}</p>\n\t\t\t\t<div>{attrOne}</div>\n\t\t\t</div>\n\t\t</li>\n\t);\n};\n\nexport default TravelPost;","import React from 'react'\nimport 'font-awesome/css/font-awesome.min.css';\nimport { Map, Marker, Popup, TileLayer } from 'react-leaflet'\nimport L from 'leaflet';\n\nclass TravelMap extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n     const position = [23.42, 53.85];\n     const iconPerson = new L.Icon({\n        iconUrl: require('./../../Assets/markerpin.png'),\n        iconRetinaUrl: require('./../../Assets/markerpin.png'),\n        iconSize: new L.Point(30.74, 24),\n        className: 'leaflet-div-icon'\n    });\n\n    return (\n      <Map center={position} \n            zoom={2} \n            preferCanvas={false}\n            scrollWheelZoom={false}>\n        {/* leaflet react for map */}\n        <TileLayer\n          attribution='&copy; <a href=\"http://openstreeetmap.org/copyright\">OpenStreetMap</a> contributors'\n            url='https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n        />\n         {this.props.personalMemory.map((popper) => {\n            let pos = [popper.log.markerLat, popper.log.markerLng]\n            return(\n            <Marker position={pos} key={popper.id} icon={iconPerson}>\n                <Popup>\n                  I was here. <br/> and it was AWESOME.\n                </Popup>\n            </Marker>\n            )\n         })}\n      </Map>\n    );\n  }\n}\n\nexport default TravelMap;","import React, { Component } from 'react';\nimport Swal from 'sweetalert2';\nimport TravelEntry from './TravelEntry';\nimport TravelPost from './TravelPost';\nimport TravelMap from './TravelMap';\nimport firebase from './../../firebase.js';\n\nclass TravelDiary extends Component {\n    constructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdbRef: firebase.database(),\n\t\t\tpersonalMemory: [],\n\t\t\tdate: '',\n\t\t\tcountryInput: '',\n\t\t\tattrOne: '',\n\t\t\tinputError: '',\n\t\t\tmarkerPosition: {\n\t\t\t\tlat: '',\n\t\t\t\tlng: ''\n\t\t\t}\n\t\t};\n\t}\n\t// fetch latest memory from firebase and update state\n    componentDidMount() {\n\t\tthis.state.dbRef.ref('users/' + this.props.user).on('value', response => {\n\t\t\tconst newState = [];\n\t\t\tconst data = response.val();\n\t\t\tfor (let key in data) {\n\t\t\t\tnewState.push({\n\t\t\t\t\tlog: data[key],\n\t\t\t\t\tid: key\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.setState({\n\t\t\t\tpersonalMemory: newState\n\t\t\t});\n\t\t});\n\t}\n\t// event run after google autocomplete\n    onPlaceSelected = ( place ) => {\n\t\tconst addressArray =  place.address_components;\n\t\tconst country = addressArray[0].long_name;\n\n\t\t// Set these values in the state.\n\t\tthis.setState({\n\t\t\tcountryInput: country,\n\t\t\tmarkerPosition: {\n\t\t\t\tlat: place.geometry.location.lat(),\n\t\t\t\tlng: place.geometry.location.lng()\n\t\t\t}\n\t\t})\n\t};\n\t// update state data base on change in form \n    handleChange = event => {\n\t\tthis.setState({\n\t\t\t[event.target.name]: event.target.value\n\t\t});\n\t};\n\n\t// VALIDATION CHECK: make sure user fill out all required field\n\tinputCheck = () => {\n\t\tlet inputError = '';\n\t\tif (\n\t\t\tthis.state.date.length === 0 ||\n\t\t\tthis.state.countryInput.length === 0 ||\n\t\t\tthis.state.attrOne.length === 0 \n\t\t) {\n\t\t\tinputError = 'Hello! Please fill it all out.';\n\t\t}\n\t\tif (inputError) {\n\t\t\tthis.setState({ inputError });\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t};\n\n\t// event - > handle click event\n\thandleClick = event => {\n\t\tevent.preventDefault();\n\t\tconst isValid = this.inputCheck();\n\t\tif (isValid) {\n\t\t\tthis.setState({\n\t\t\t\tdate: '',\n\t\t\t\tcountryInput: '',\n\t\t\t\tattrOne: '',\n\t\t\t\tinputError: '',\n\t\t\t\tmarkerPosition: {\n\t\t\t\t\tlat: '',\n\t\t\t\t\tlng: ''\n\t\t\t\t}\n\t\t\t});\n\n\t// push to firebase\n\t\tthis.state.dbRef.ref('users/' + this.props.user).push({\n\t\t\tdate: this.state.date,\n\t\t\tcountryInput: this.state.countryInput,\n\t\t\tattrOne: this.state.attrOne,\n\t\t\tmarkerLat: this.state.markerPosition.lat,\n\t\t\tmarkerLng: this.state.markerPosition.lng\n\t\t});\n\t\t}\n\t};\n\n\t// delete personalMemory that user inputted \n\tdeleteMemory = memoryId => {\n\t\tSwal.fire({\n\t\t\ttitle: 'Are you sure you want to delete this Memory?',\n\t\t\ttype: 'warning',\n\t\t\tshowCancelButton: true,\n\t\t\tconfirmButtonColor: '#846075',\n\t\t\tcancelButtonColor: '#1A1423',\n\t\t\tconfirmButtonText: 'Yes, delete it!'\n\t\t}).then(result => {\n\t\t\tif (result.value) {\n\t\t\t\tthis.state.dbRef.ref('users/' + this.props.user).child(memoryId).remove();\n\t\t\t}\n\t\t});\n\t};\n    render() {\n      return (\n        <main className=\"wrapper\">\n            <section className='personalBoard'>\n\t\t\t\t<div className=\"travelEntry\">\n\t\t\t\t\t{/* travel entry form to submit a new memory */}\n\t\t\t\t\t<TravelEntry\n\t\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\t\thandleClick={this.handleClick}\n\t\t\t\t\t\tdate={this.state.date}\n\t\t\t\t\t\tcountryInput={this.state.countryInput}\n\t\t\t\t\t\tattrOne={this.state.attrOne}\n\t\t\t\t\t\tinputError={this.state.inputError}\n\t\t\t\t\t\tautoFunction={this.onPlaceSelected}\n\t\t\t\t\t\tuser={this.props.user}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n            </section>\n\t\t\t<div>\n\t\t\t\t<ul className=\"personalDiary\">\n\t\t\t\t\t{/* display memory base on user logged in */}\n\t\t\t\t\t{this.state.personalMemory.map(entry => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<TravelPost\n\t\t\t\t\t\t\t\tkey={entry.id.user}\n\t\t\t\t\t\t\t\tdate={entry.log.date}\n\t\t\t\t\t\t\t\tcountryInput={entry.log.countryInput}\n\t\t\t\t\t\t\t\tattrOne={entry.log.attrOne}\n\t\t\t\t\t\t\t\tdeleteEntry={() => this.deleteMemory(entry.id)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t<div className=\"mapContainer\">\n\t\t\t\t\t{/* display leaflet map */}\n\t\t\t\t\t<TravelMap \n\t\t\t\t\tpersonalMemory={this.state.personalMemory}\n\t\t\t\t\t/>\n\t\t\t</div>\n        </main>\n      )\n    }\n  }\n  \n  export default TravelDiary;","import React, { Component } from 'react';\nimport firebase from './../../firebase.js';\nimport 'firebase/auth';\nimport Swal from 'sweetalert2';\n\nclass SignIn extends Component {\n    state = {\n        email: '',\n        password: '',\n    }\n    handleChange = (event) => {\n        this.setState({\n            [event.target.id]: event.target.value\n        })\n    }\n    submitHandle = (event) => {\n        event.preventDefault();\n    }\n    login = () => {\n        const email = document.querySelector('#email').value;\n        const password = document.querySelector('#password').value;\n        firebase.auth().signInWithEmailAndPassword(email, password)\n          .then((u) => {\n        this.props.updateState(u.user.uid);\n        this.props.updateDiary();\n        this.props.updateDisplayName(u.user.displayName);\n        })\n\n        .catch((err) => {\n            Swal.fire({\n                title: 'Please Try Again',\n                text: err.message,\n                type: 'error',\n                confirmButtonColor: '#846075',\n                cancelButtonColor: '#1A1423',\n            })\n        })\n    }\n      \n    render() {\n        return(\n            <div className=\"formContainer\">\n                <form onSubmit={this.submitHandle} className=\"signin\">\n                    <h4>Sign In</h4>\n                    <label htmlFor=\"email\">Email</label>\n                    <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n\n                    <label htmlFor=\"password\">Password</label>\n                    <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n                    <button className=\"signinBtn\" onClick={this.login}>LogIn</button>\n                </form>\n\n            </div>\n        )\n    }\n}\n\nexport default SignIn;","import React, { Component } from 'react';\nimport firebase from './../../firebase.js';\nimport 'firebase/auth';\nimport Swal from 'sweetalert2';\n\nclass SignUp extends Component {\n    state = {\n        email: '',\n        password: '',\n        name: '',\n        lastName: '',\n    }\n    handleChange = (event) => {\n        this.setState({\n            [event.target.id]: event.target.value\n        })\n    }\n    submitHandle = (event) => {\n        event.preventDefault();\n    }\n    signUp = () => {\n        const email = document.querySelector('#emailup').value;\n        const password = document.querySelector('#passwordup').value;\n        const firstName = document.querySelector('#name').value;\n        const lastName = document.querySelector('#lastName').value;\n\n        firebase.auth().createUserWithEmailAndPassword(email, password)\n          .then((u) => {\n            u.user.updateProfile({\n                displayName: `${firstName} ${lastName}`\n            }).then(() => {\n                this.props.updateDisplayName(u.user.displayName);\n            })\n            Swal.fire({\n                title: 'Yay, Please proceed to login',\n                type: 'success',\n                text: 'Have a Happy Memory!',\n                confirmButtonColor: '#846075',\n            })\n    \n          }).catch((err) => {\n            Swal.fire({\n                title: 'Please Register Again!',\n                type: 'error',\n                text: err.message,\n                confirmButtonColor: '#846075',\n                cancelButtonColor: '#1A1423',\n            })\n        })\n    }\n    \n    render() {\n        return(\n            <div className=\"formContainer\">\n                <form onSubmit={this.submitHandle} className=\"signin\">\n                    <h4>Register</h4>\n                    <label htmlFor=\"email\">Email</label>\n                    <input type=\"email\" id=\"emailup\" onChange={this.handleChange}/>\n\n                    <label htmlFor=\"password\">Password</label>\n                    <input type=\"password\" id=\"passwordup\" onChange={this.handleChange}/>\n\n                    <label htmlFor=\"name\">Name</label>\n                    <input type=\"text\" id=\"name\" onChange={this.handleChange}/>\n\n                    <label htmlFor=\"lastName\">Last Name</label>\n                    <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\n\n                    <button className=\"signinBtn\" onClick={this.signUp}>Register</button>\n                </form>\n\n            </div>\n        )\n    }\n}\n\nexport default SignUp;","import React, { Component } from 'react';\nimport 'font-awesome/css/font-awesome.min.css';\nimport './Styles/App.css';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport 'firebase/auth';\nimport Nav from './Components/layout/Nav';\nimport Header from './Components/layout/Header';\nimport Footer from './Components/layout/Footer';\nimport TravelDiary from './Components/project/TravelDiary';\nimport SignIn from './Components/authenication/SignIn';\nimport SignUp from './Components/authenication/SignUp';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      user: null,\n      showLogin: false,\n      showSignUp: false,\n      showHeader: true,\n      showDiary: false,\n      displayName: ''\n    }\n  }\n\n  updateState = (a) => {\n    this.setState({\n      user: a,\n    })\n  }\n\n  showDiary = () => {\n    this.setState({\n      showDiary: true,\n      showLogin: false,\n      showSignUp: false,\n      showHeader: false\n    })\n  }\n\n  showLogin = () => {\n    this.setState({\n      showLogin: true,\n      showDiary: false,\n      showSignUp: false,\n      showHeader: false\n    })\n  }\n\n  showSignUp = () => {\n    this.setState({\n      showDiary: false,\n      showLogin: false,\n      showSignUp: true,\n      showHeader: false\n    })\n\n  }\n  updateDisplayName = (name) => {\n    this.setState ({\n      displayName: name\n    })\n  }\n    \n  render() {\n    let showItem;\n\n    if(this.state.showSignUp && !this.state.showHeader ) {\n      showItem =  <SignUp updateState={this.updateState} updateDisplayName={this.updateDisplayName} /> ;\n    } else if (this.state.showLogin && !this.state.showHeader ){\n      showItem = <SignIn updateState={this.updateState} updateDiary={this.showDiary} updateDisplayName={this.updateDisplayName} /> ;\n    } else if (this.state.showDiary){\n      showItem = <TravelDiary  user={this.state.user} />;\n    } \n    else{\n      showItem = <Header />;\n    }\n\n  return (\n    <BrowserRouter >\n      <div className=\"App\">\n        <Nav showLogin={this.showLogin} showSignUp={this.showSignUp} user={this.state.user} displayName={this.state.displayName}/>\n        <div className=\"mainSectionContainer\">\n        {showItem}\n        </div>\n        <Footer />\n      </div>\n    </BrowserRouter>\n  )\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}